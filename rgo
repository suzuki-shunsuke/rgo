#!/usr/bin/env bash

set -euxo pipefail

version=$1

WORKFLOW=${WORKFLOW:-release.yaml}
GITHUB_SERVER_URL=${GITHUB_SERVER_URL:-https://github.com}
GITHUB_REPOSITORY=$(gh repo view --json nameWithOwner --jq ".nameWithOwner")
GITHUB_REPOSITORY_OWNER=${GITHUB_REPOSITORY%/*}
GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}

git tag -m "chore: release $version" "$version"
git push origin "$version"

if [[ "$version" =~ - ]]; then
    exit 0
fi

# Get a workflow run id
sleep 10 # Wait for the workflow run to start
run_id=$(gh run list -w "$WORKFLOW" -L 1 --json databaseId --jq '.[].databaseId')

# Wait until the workflow run completes
gh run watch --exit-status "$run_id"

# Work on a temporary directory
tempdir=$(mktemp -d)
echo "[INFO] Temporary directory: $tempdir" >&2
cd "$tempdir"
# Download the GitHub Actions Artifact
artifact_name=goreleaser
echo "[INFO] Downloading GitHub Actions Artifact" >&2
gh run download -R "$GITHUB_REPOSITORY" "$run_id" --pattern "$artifact_name"

# Push homebrew
if [ -d "${artifact_name}/homebrew" ]; then
    echo "[INFO] Checking out homebrew-${GITHUB_REPOSITORY_NAME}" >&2
    git clone --depth 1 "$GITHUB_SERVER_URL/${GITHUB_REPOSITORY_OWNER}/homebrew-${GITHUB_REPOSITORY_NAME}"
    cp "${artifact_name}"/homebrew/*.rb "homebrew-${GITHUB_REPOSITORY_NAME}"
    pushd "homebrew-${GITHUB_REPOSITORY_NAME}"
    echo "[INFO] Commit and push homebrew-${GITHUB_REPOSITORY_NAME}" >&2
    git add *.rb
    git commit -m "Brew formula update for $GITHUB_REPOSITORY_NAME version $version"
    git push origin main
    popd
else
    echo "[INFO] Homebrew-tap recipe isn't found" >&2
fi

# Push scoop
if [ -d "${artifact_name}/scoop" ]; then
    echo "[INFO] Checking out scoop-bucket" >&2
    git clone --depth 1 "$GITHUB_SERVER_URL/${GITHUB_REPOSITORY_OWNER}/scoop-bucket"
    cp "${artifact_name}"/scoop/*.json "scoop-bucket"
    pushd "scoop-bucket"
    echo "[INFO] Commit and push scoop" >&2
    git add *.json
    git commit -m "Scoop update for $GITHUB_REPOSITORY_NAME version $version"
    git push origin main
    popd
else
    echo "[INFO] Scoop manifest isn't found" >&2
fi

# Winget
if [ -d "${artifact_name}/winget" ]; then
    # Checkout suzuki-shunsuke/winget-pkgs
    # Push to suzuki-shunsuke/winget-pkgs
    # Create a pull request to microsoft/winget-pkgs
    WINGET_REPO_OWNER=suzuki-shunsuke
    WINGET_NAME=aquaproj.aqua
    echo "[INFO] Checking out winget-pkgs" >&2
    git init winget-pkgs
    pushd "winget-pkgs"
    git remote add origin https://github.com/microsoft/winget-pkgs
    git fetch --depth=1 origin master
    branch="$WINGET_NAME-$version"
    git checkout -b "$branch" origin/master
    rm -R manifests
    cp -R "../${artifact_name}"/winget/manifests .
    echo "[INFO] Commit and push winget" >&2
    find manifests -type f | xargs git add
    git commit -m "Update $WINGET_NAME to $version"
    git remote add fork "https://github.com/$WINGET_REPO_OWNER/winget-pkgs"
    git push fork "$branch"
    gh repo set-default https://github.com/microsoft/winget-pkgs
    gh pr create \
        --title "New version: $WINGET_NAME $version" \
        --head "${WINGET_REPO_OWNER}:$branch" \
        --body-file .github/PULL_REQUEST_TEMPLATE.md
    popd
else
    echo "[INFO] Winget manifest isn't found" >&2
fi

echo "[INFO] Removing the temporary directory" >&2
rm -Rf "$tempdir"
